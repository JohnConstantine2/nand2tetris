// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Use a Register to Read and/or write value.
    Register(in=out3, load=sel3, out=outRegister, out=out);
    
    // Read the value in the Register and increment it by 1.
    Inc16(in=outRegister, out=outInc);
    // Add16(a=outRegister, b[0]=true, b[1..15] = false, out=outInc);
    
    // Select which value to use for the input of the Register between inc load and reset.
    Mux16(a=outRegister, b=outInc, sel=inc, out=out1); // If inc is set to 1 load the incremented output else load the initial value of the Register.
    Mux16(a=out1, b=in, sel=load, out=out2); // If load is set to 1 load Input Gate else load out1.
    Mux16(a=out2, b=false, sel=reset, out=out3); // If reset is to 1 load zero else load out2.

    Mux(a=false, b=true, sel=inc, out=sel1); // If inc is set to 1 load true else load false.
    Mux(a=sel1, b=load, sel=load, out=sel2); // If load is set to 1 use load else use sel1.
    Mux(a=sel2, b=true, sel=reset, out=sel3); // If reset is to 1 load 1 else load sel2.
}
